::
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
   
    Matrix of integers / div = integer
    >>> int_matrix = [
    ... [1, 2, 3],
    ... [4, 5, 6]
    ... ]

::

    >>> print(matrix_divided(int_matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

::

    >>> print(matrix_divided(int_matrix, -2))
    [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

::
Matrix of integers / div = string
    >>> int_matrix = [
    ... [1, 2, 3],
    ... [4, 5, 6]
    ... ]
    >>> print(matrix_divided(int_matrix, "hello"))
    Traceback (most recent call last):
    TypeError: div must be a number

::
Matrix of integers / div = 0
    >>> int_matrix = [
    ... [1, 2, 3],
    ... [4, 5, 6]
    ... ]
    >>> print(matrix_divided(int_matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

::
 not Matrix of integers / div = integer
    >>> no_matrix = "hello"
    >>> print(matrix_divided(no_matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


::
    Matrix of different row lenghtes
    >>> difflen_matrix = [
    ... [1, 2, 3],
    ... [4, 5],
    ... [6]
    ... ]
    >>> print(matrix_divided(difflen_matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

::------------------------
    Matrix of integers with one float(inf/nan) / div = integer
    >>> int_matrix = [
    ... [1, 'NaN', 3],
    ... [4, 5, 'inf']
    ... ]
    >>> print(matrix_divided(int_matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
    Matrix of integers / div = integer
    >>> int_matrix = [
    ... [1, 2, 3],
    ... [4, 5, 6]
    ... ]
    >>> print(matrix_divided(int_matrix))
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

::
    Matrix of integers / div = integer
    >>> int_matrix = [
    ... [1, 2, 3],
    ... [4, 5, 6]
    ... ]
    >>> print(matrix_divided())
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

::
    Matrix of integers / div = 'inf'
    >>> int_matrix = [
    ... [1, 2, 3],
    ... [4, 5, 6]
    ... ]
    >>> print(matrix_divided(int_matrix, 'inf'))
    Traceback (most recent call last):
    TypeError: div must be a number
